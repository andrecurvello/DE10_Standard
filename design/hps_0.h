#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'DE10_Standard_Bitcoin_Design' in
 * file './DE10_Standard_Bitcoin_Design.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'BMC_0', class 'BMC'
 * The macros are prefixed with 'BMC_0_'.
 * The prefix is the slave descriptor.
 */
#define BMC_0_COMPONENT_TYPE BMC
#define BMC_0_COMPONENT_NAME BMC_0
#define BMC_0_BASE 0x0
#define BMC_0_SPAN 64
#define BMC_0_END 0x3f

/*
 * Macros for device 'SEG7_0', class 'SEG7'
 * The macros are prefixed with 'SEG7_0_'.
 * The prefix is the slave descriptor.
 */
#define SEG7_0_COMPONENT_TYPE SEG7
#define SEG7_0_COMPONENT_NAME SEG7_0
#define SEG7_0_BASE 0x0
#define SEG7_0_SPAN 8
#define SEG7_0_END 0x7

/*
 * Macros for device 'BMC_1', class 'BMC'
 * The macros are prefixed with 'BMC_1_'.
 * The prefix is the slave descriptor.
 */
#define BMC_1_COMPONENT_TYPE BMC
#define BMC_1_COMPONENT_NAME BMC_1
#define BMC_1_BASE 0x40
#define BMC_1_SPAN 64
#define BMC_1_END 0x7f

/*
 * Macros for device 'BMC_2', class 'BMC'
 * The macros are prefixed with 'BMC_2_'.
 * The prefix is the slave descriptor.
 */
#define BMC_2_COMPONENT_TYPE BMC
#define BMC_2_COMPONENT_NAME BMC_2
#define BMC_2_BASE 0x80
#define BMC_2_SPAN 64
#define BMC_2_END 0xbf

/*
 * Macros for device 'BMC_3', class 'BMC'
 * The macros are prefixed with 'BMC_3_'.
 * The prefix is the slave descriptor.
 */
#define BMC_3_COMPONENT_TYPE BMC
#define BMC_3_COMPONENT_NAME BMC_3
#define BMC_3_BASE 0xc0
#define BMC_3_SPAN 64
#define BMC_3_END 0xff

/*
 * Macros for device 'BMC_4', class 'BMC'
 * The macros are prefixed with 'BMC_4_'.
 * The prefix is the slave descriptor.
 */
#define BMC_4_COMPONENT_TYPE BMC
#define BMC_4_COMPONENT_NAME BMC_4
#define BMC_4_BASE 0x100
#define BMC_4_SPAN 64
#define BMC_4_END 0x13f

/*
 * Macros for device 'BMC_5', class 'BMC'
 * The macros are prefixed with 'BMC_5_'.
 * The prefix is the slave descriptor.
 */
#define BMC_5_COMPONENT_TYPE BMC
#define BMC_5_COMPONENT_NAME BMC_5
#define BMC_5_BASE 0x140
#define BMC_5_SPAN 64
#define BMC_5_END 0x17f

/*
 * Macros for device 'BMC_6', class 'BMC'
 * The macros are prefixed with 'BMC_6_'.
 * The prefix is the slave descriptor.
 */
#define BMC_6_COMPONENT_TYPE BMC
#define BMC_6_COMPONENT_NAME BMC_6
#define BMC_6_BASE 0x180
#define BMC_6_SPAN 64
#define BMC_6_END 0x1bf

/*
 * Macros for device 'BMC_7', class 'BMC'
 * The macros are prefixed with 'BMC_7_'.
 * The prefix is the slave descriptor.
 */
#define BMC_7_COMPONENT_TYPE BMC
#define BMC_7_COMPONENT_NAME BMC_7
#define BMC_7_BASE 0x1c0
#define BMC_7_SPAN 64
#define BMC_7_END 0x1ff

/*
 * Macros for device 'Register_256_0', class 'Register_256'
 * The macros are prefixed with 'REGISTER_256_0_'.
 * The prefix is the slave descriptor.
 */
#define REGISTER_256_0_COMPONENT_TYPE Register_256
#define REGISTER_256_0_COMPONENT_NAME Register_256_0
#define REGISTER_256_0_BASE 0x200
#define REGISTER_256_0_SPAN 32
#define REGISTER_256_0_END 0x21f

/*
 * Macros for device 'Register_0', class 'Register_256'
 * The macros are prefixed with 'REGISTER_0_'.
 * The prefix is the slave descriptor.
 */
#define REGISTER_0_COMPONENT_TYPE Register_256
#define REGISTER_0_COMPONENT_NAME Register_0
#define REGISTER_0_BASE 0x220
#define REGISTER_0_SPAN 32
#define REGISTER_0_END 0x23f

/*
 * Macros for device 'Register_1', class 'Register_256'
 * The macros are prefixed with 'REGISTER_1_'.
 * The prefix is the slave descriptor.
 */
#define REGISTER_1_COMPONENT_TYPE Register_256
#define REGISTER_1_COMPONENT_NAME Register_1
#define REGISTER_1_BASE 0x240
#define REGISTER_1_SPAN 32
#define REGISTER_1_END 0x25f

/*
 * Macros for device 'Register_2', class 'Register_256'
 * The macros are prefixed with 'REGISTER_2_'.
 * The prefix is the slave descriptor.
 */
#define REGISTER_2_COMPONENT_TYPE Register_256
#define REGISTER_2_COMPONENT_NAME Register_2
#define REGISTER_2_BASE 0x260
#define REGISTER_2_SPAN 32
#define REGISTER_2_END 0x27f

/*
 * Macros for device 'Register_3', class 'Register_256'
 * The macros are prefixed with 'REGISTER_3_'.
 * The prefix is the slave descriptor.
 */
#define REGISTER_3_COMPONENT_TYPE Register_256
#define REGISTER_3_COMPONENT_NAME Register_3
#define REGISTER_3_BASE 0x280
#define REGISTER_3_SPAN 32
#define REGISTER_3_END 0x29f

/*
 * Macros for device 'Register_4', class 'Register_256'
 * The macros are prefixed with 'REGISTER_4_'.
 * The prefix is the slave descriptor.
 */
#define REGISTER_4_COMPONENT_TYPE Register_256
#define REGISTER_4_COMPONENT_NAME Register_4
#define REGISTER_4_BASE 0x300
#define REGISTER_4_SPAN 32
#define REGISTER_4_END 0x31f

/*
 * Macros for device 'Register_5', class 'Register_256'
 * The macros are prefixed with 'REGISTER_5_'.
 * The prefix is the slave descriptor.
 */
#define REGISTER_5_COMPONENT_TYPE Register_256
#define REGISTER_5_COMPONENT_NAME Register_5
#define REGISTER_5_BASE 0x320
#define REGISTER_5_SPAN 32
#define REGISTER_5_END 0x33f

/*
 * Macros for device 'Register_6', class 'Register_256'
 * The macros are prefixed with 'REGISTER_6_'.
 * The prefix is the slave descriptor.
 */
#define REGISTER_6_COMPONENT_TYPE Register_256
#define REGISTER_6_COMPONENT_NAME Register_6
#define REGISTER_6_BASE 0x340
#define REGISTER_6_SPAN 32
#define REGISTER_6_END 0x35f

/*
 * Macros for device 'Register_7', class 'Register_256'
 * The macros are prefixed with 'REGISTER_7_'.
 * The prefix is the slave descriptor.
 */
#define REGISTER_7_COMPONENT_TYPE Register_256
#define REGISTER_7_COMPONENT_NAME Register_7
#define REGISTER_7_BASE 0x360
#define REGISTER_7_SPAN 32
#define REGISTER_7_END 0x37f

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'SYSID_QSYS_'.
 * The prefix is the slave descriptor.
 */
#define SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define SYSID_QSYS_BASE 0x10000
#define SYSID_QSYS_SPAN 8
#define SYSID_QSYS_END 0x10007
#define SYSID_QSYS_ID 2899645186
#define SYSID_QSYS_TIMESTAMP 1506173566

/*
 * Macros for device 'button_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'BUTTON_PIO_'.
 * The prefix is the slave descriptor.
 */
#define BUTTON_PIO_COMPONENT_TYPE altera_avalon_pio
#define BUTTON_PIO_COMPONENT_NAME button_pio
#define BUTTON_PIO_BASE 0x100c0
#define BUTTON_PIO_SPAN 16
#define BUTTON_PIO_END 0x100cf
#define BUTTON_PIO_IRQ 1
#define BUTTON_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define BUTTON_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define BUTTON_PIO_CAPTURE 1
#define BUTTON_PIO_DATA_WIDTH 4
#define BUTTON_PIO_DO_TEST_BENCH_WIRING 0
#define BUTTON_PIO_DRIVEN_SIM_VALUE 0
#define BUTTON_PIO_EDGE_TYPE FALLING
#define BUTTON_PIO_FREQ 50000000
#define BUTTON_PIO_HAS_IN 1
#define BUTTON_PIO_HAS_OUT 0
#define BUTTON_PIO_HAS_TRI 0
#define BUTTON_PIO_IRQ_TYPE EDGE
#define BUTTON_PIO_RESET_VALUE 0

/*
 * Macros for device 'ILC', class 'interrupt_latency_counter'
 * The macros are prefixed with 'ILC_'.
 * The prefix is the slave descriptor.
 */
#define ILC_COMPONENT_TYPE interrupt_latency_counter
#define ILC_COMPONENT_NAME ILC
#define ILC_BASE 0x30000
#define ILC_SPAN 256
#define ILC_END 0x300ff


#endif /* _ALTERA_HPS_0_H_ */
